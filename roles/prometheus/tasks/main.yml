---
- name: check if installing a different version of prometheus
  tags:
    - prometheus
  shell: "cat {{ prometheus_config }}/.sha256"
  ignore_errors: true
  register: checksum

- name: determine if prometheus {{ prometheus_version}} should be installed
  tags:
    - prometheus
  set_fact:
    prometheus_install: (checksum.stdout.find(prometheus_sha256) == -1) or (prometheus_force is defined)

- name: download and checksum prometheus {{ prometheus_version }} tarball
  tags:
    - prometheus
  when: prometheus_install
  get_url:
    url: "{{ prometheus_url }}"
    dest: "{{ prometheus_tgz }}"
    checksum: "sha256:{{ prometheus_sha256 }}"

- name: unpack prometheus tarball
  tags:
    - prometheus
  when: prometheus_install
  unarchive:
    src: "{{ prometheus_tgz }}"
    dest: "/tmp/"
    copy: false

- name: create prometheus user
  tags:
    - prometheus
  when: prometheus_install
  user:
    name: prometheus
    shell: "/bin/false"
    comment: "prometheus service user"

- name: check if prometheus service exists
  tags:
    - prometheus
  stat:
    path: "/etc/systemd/system/prometheus.service"
  register: svccheck

- name: stop prometheus service if it exists
  tags:
    - prometheus
  when: svccheck.stat.exists
  service:
    name: prometheus
    state: stopped

- name: copy prometheus binaries to {{ host_bin_path }}
  tags:
    - prometheus
  when: prometheus_install
  command: "cp {{ prometheus_tmp }}/{{ item }} {{ host_bin_path }}/"
  with_items:
    - "prometheus"
    - "promtool"

- name: set permissions on prometheus binaries
  tags:
    - prometheus
  when: prometheus_install
  file:
    path: "{{ host_bin_path }}/{{ item }}"
    owner: prometheus
    group: prometheus
    mode: 0755
  with_items:
    - "prometheus"
    - "promtool"

- name: create prometheus config directory
  tags:
    - prometheus
  when: prometheus_install
  file:
    path: "{{ prometheus_config }}"
    state: directory
    owner: prometheus
    group: prometheus
    mode: 0755

- name: create prometheus configuration
  tags:
    - prometheus
  template:
    src: prometheus.yml.j2
    dest: "{{ prometheus_config }}/prometheus.yml"
  with_items: "{{ prometheus_jobs }}"

- name: create prometheus alerts file
  tags:
    - prometheus
  template:
    src: alerts.rules.j2
    dest: "{{ prometheus_config }}/alerts.rules"

- name: create prometheus data directory
  tags:
    - prometheus
  when: prometheus_install
  file:
    path: "{{ prometheus_data }}"
    state: directory
    owner: prometheus
    group: prometheus
    mode: 0755

- name: create prometheus systemd unit
  tags:
    - prometheus
  template:
    src: prometheus.service.j2
    dest: "/etc/systemd/system/prometheus.service"

- name: reload systemd configurations
  tags:
    - prometheus
  command: "systemctl daemon-reload"

- name: start prometheus service
  tags:
    - prometheus
  service:
    name: prometheus
    state: started
    enabled: true

- name: remove temporary prometheus files
  tags:
    - prometheus
  when: prometheus_install
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "{{ prometheus_tmp }}"
    - "{{ prometheus_tgz }}"

- name: create checksum file for prometheus {{ prometheus_version }}
  tags:
    - prometheus
  when: prometheus_install
  template:
    src: sha256.j2
    dest: "{{ prometheus_config }}/.sha256"
