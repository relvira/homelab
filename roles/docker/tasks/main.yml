---
- name: Install aptitude using apt
  apt: name=aptitude state=latest update_cache=yes force_apt_get=yes

- name: Install required system packages
  apt: name={{ item }} state=latest update_cache=yes
  loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'python3-pip', 'virtualenv', 'python3-setuptools']

- name: Add Docker GPG apt Key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add Docker Repository
  apt_repository:
    repo: deb https://download.docker.com/linux/ubuntu bionic stable
    state: present

- name: Update apt and install docker-ce
  apt: update_cache=yes name=docker-ce state=latest

- name: Install Docker Module for Python
  pip:
    name: docker

- name: Start docker service
  command: systemctl restart docker.service

- name: Listing docker networks
  command: docker network ls
  register: dockernets

- name: Create private network
  command: docker network create --subnet={{docknet.subnet}} --ip-range={{docknet.iprange}} --gateway={{docknet.gateway}} -o parent={{docknet.interface}} {{docknet.name}}
  when: docknet is defined and dockernets.stdout.find(docknet.name) == -1

- name: Check for dangling docker images
  command: docker images -f "dangling=true" -q
  register: dockerdangling

- name: docker cleanup dangling images
  command: sh -c 'docker rmi $(docker images -f "dangling=true" -q)'
  when: dockerdangling.stdout != ""
  ignore_errors: yes
